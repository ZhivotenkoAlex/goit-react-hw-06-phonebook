{"version":3,"sources":["components/NameForm/NameForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","redux/actions.js","redux/selectors.js","components/ContactList/ContactList.jsx","components/NameForm/NameForm.jsx","components/Filter/Filter.jsx","components/Container/Container.jsx","App.js","redux/reducers.js","redux/store.js","index.js"],"names":["module","exports","addContact","createAction","name","phone","payload","id","shortid","generate","deleteContact","changeFilter","getContacts","state","contacts","items","getFilter","filter","getVisibleContacts","normalizedFilter","toLowerCase","includes","ContactList","useSelector","dispatch","useDispatch","map","className","s","container","button","type","onClick","actions","onDeleteContact","Nameform","useState","setName","setPhone","handleChange","event","currentTarget","value","nameInputId","phoneInputId","form","onSubmit","preventDefault","find","contact","checkRepeatName","checkRepeatPhone","trim","alert","label","onChange","Filter","e","target","Container","children","App","createReducer","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","phonebookPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","reducers","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.eb01d257.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NameForm_form__3M4AB\",\"container\":\"NameForm_container__2QGgy\",\"label\":\"NameForm_label__3LD7I\",\"input\":\"NameForm_input__2Uohg\",\"button\":\"NameForm_button__2J7mr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactList_container__vLa7q\",\"name\":\"ContactList_name__1J7kO\",\"button\":\"ContactList_button__1Mw9z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__BP4LO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__hH-z0\"};","import { createAction } from '@reduxjs/toolkit';\r\nimport shortid from 'shortid';\r\n\r\nexport const addContact = createAction('phonebook/add', (name, phone) => ({\r\n    payload: {\r\n        id: shortid.generate(),\r\n        name,\r\n        phone\r\n    },\r\n}));\r\n\r\nexport const deleteContact = createAction('phonebook/delete');\r\n\r\nexport const changeFilter=createAction('phonebook/changeFilter')\r\n\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\n \r\n","export const getContacts = state => state.contacts.items;\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\nexport const getVisibleContacts = (state) => {\r\n  const contacts = getContacts(state);\r\n  const filter = getFilter(state);\r\n    const normalizedFilter = filter.toLowerCase(); \r\n    \r\n    return contacts.filter(({ name }) =>\r\n        name.toLowerCase().includes(normalizedFilter)\r\n    )\r\n}","  \r\nimport React from 'react';\r\nimport s from './ContactList.module.css';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport * as actions from '../../redux/actions';\r\nimport {getVisibleContacts} from '../../redux/selectors'\r\n\r\nfunction ContactList() {\r\n  const contacts = useSelector(getVisibleContacts);\r\n  const dispatch = useDispatch();\r\n  const onDeleteContact = id => dispatch(actions.deleteContact(id));\r\n\r\n\r\nreturn (\r\n  <ul >\r\n    {contacts.map(({ id, name,phone }) => (\r\n      <li className={ s.container} key={id} >\r\n        <p className={ s.name}>{name}</p>\r\n        <p className={ s.name}>{phone}</p>\r\n        <button className={ s.button} type=\"button\" onClick={() => onDeleteContact(id)}>Удалить</button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);}\r\n\r\nexport default ContactList;","import { useState} from 'react';\r\nimport shortid from 'shortid';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getContacts } from '../../redux/selectors';\r\nimport {addContact} from '../../redux/actions';\r\nimport s from './NameForm.module.css';\r\n\r\nexport default function Nameform() {\r\n    const contacts = useSelector(getContacts);\r\n    const dispatch = useDispatch();\r\n    // const onSubmit = ({ name, number }) => dispatch(actions.addContact(name, number));\r\n    const [name, setName] = useState('');\r\n    const [phone, setPhone] = useState('');\r\n\r\n      const handleChange = event => {\r\n        const { name, value } = event.currentTarget;\r\n\r\n        switch (name) {\r\n            case 'name':\r\n                setName(value);\r\n                break;\r\n            case 'phone':\r\n                setPhone(value);\r\n                break;\r\n            default: return;\r\n        };\r\n    };\r\n\r\n    const resetinput = () => {\r\n        setName('');\r\n        setPhone('');\r\n    }\r\n\r\n    const checkRepeatName = name => {\r\n        return contacts.find(contact => contact.name.toLowerCase() === name.toLowerCase())\r\n    };  \r\n\r\n    const checkRepeatPhone = phone => { return contacts.find(contact => contact.phone === phone) };\r\n\r\n    const handleSubmit = event => {\r\n        event.preventDefault();\r\n       \r\n        if (checkRepeatName(name)) {\r\n         alert(`${name} is already added.`)\r\n        }\r\n        else if (checkRepeatPhone(phone)) {\r\n            alert(`${phone} is already added.`)\r\n        }\r\n        else if (name.trim() === '' || phone.trim() === '') {\r\n            alert('All of inputs must be not empty')\r\n            }\r\n        else {\r\n            dispatch(addContact(name,phone));\r\n        }\r\n        resetinput();\r\n    };\r\n    \r\n    const nameInputId = shortid.generate();\r\n    const phoneInputId = shortid.generate();\r\n\r\n    return (\r\n        <>\r\n            <form className={s.form} onSubmit={handleSubmit}>\r\n                <div className={s.container}>\r\n                    <label className={s.label}>\r\n                        Name\r\n                            <input\r\n                            type=\"text\"\r\n                            name='name'\r\n                            value={name}\r\n                            onChange={handleChange}\r\n                            id={nameInputId}\r\n                        />\r\n                    </label >\r\n                    <label className={s.label}>\r\n                        Phone\r\n                             <input\r\n                            type=\"text\"\r\n                            name='phone'\r\n                            value={phone}\r\n                            onChange={handleChange}\r\n                            id={phoneInputId}\r\n                        />\r\n                    </label>\r\n                        \r\n\r\n                    <button className={s.button} type='submit'>Add contact</button>\r\n\r\n                </div>\r\n            </form>\r\n        </>\r\n    );\r\n\r\n\r\n};\r\n","\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getFilter } from '../../redux/selectors';\r\nimport * as actions from '../../redux/actions';\r\nimport s from './Filter.module.css';\r\n\r\nexport default function Filter() {\r\n    \r\n    const value = useSelector(getFilter);\r\n    const dispatch = useDispatch();\r\n    const change = e => dispatch(actions.changeFilter(e.target.value));\r\n    return (\r\n     <label className={ s.label}>\r\n            Name filter\r\n            <input type=\"text\"\r\n                value={value}\r\n                onChange={change} />\r\n    </label>\r\n)   \r\n\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport s from './Container.module.css';\r\n\r\nfunction Container({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Container;","\r\nimport ContactList from './components/ContactList';\r\nimport NameForm from './components/NameForm/NameForm';\r\nimport Filter from './components/Filter';\r\nimport Container from './components/Container';\r\n\r\nimport './App.css';\r\n\r\nexport default function App() {\r\n  \r\n\r\n\r\n    \r\n    return (\r\n       <Container>\r\n       <h1 className=\"title\"> Phonebook </h1>\r\n       <h2 className=\"subtitle\">Add new contact</h2>\r\n       <NameForm /*onSubmit={addContact}*/ />\r\n       <h2 className=\"subtitle\">Find contact</h2>\r\n       <Filter /*value={filter} onChange={changeFilter} *//>\r\n       <h2 className=\"subtitle\">Contact list</h2>\r\n       <ContactList /*contacts = { getVisibleContacts() }\r\n         onDeleteContact = {deleteContact}*//>\r\n       </Container>\r\n    )\r\n}\r\n\r\n","  \r\nimport { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport { addContact, deleteContact, changeFilter } from './actions';\r\n\r\nconst initialContactlist = [\r\n    { \"id\": \"id-1\", \"name\": \"John Piters\", \"phone\": \"555-55-55\" },\r\n    { \"id\": \"id-2\", \"name\": \"Piter Johnson\", \"phone\": \"444-44-44\" },\r\n    { \"id\": \"id-3\", \"name\": \"Pit Ivans\", \"phone\": \"333-33-33\" },\r\n    { \"id\": \"id-4\", \"name\": \"Ivan Piterson\", \"phone\": \"222-22-22\" }\r\n];\r\n\r\nconst items = createReducer(\r\n    initialContactlist, {\r\n        [addContact]: (state, { payload }) => [...state, payload],\r\n        [deleteContact]:(state, { payload })=>state.filter(({ id }) => id !== payload),\r\n    }\r\n)\r\n\r\nconst filter = createReducer('', {\r\n    [changeFilter]:(state, { payload }) => payload,\r\n}\r\n    \r\n)\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport reducers from './reducers';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst phonebookPersistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(phonebookPersistConfig, reducers),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport const persistor = persistStore(store);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport { store, persistor } from './redux/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistor}>\r\n         <BrowserRouter>\r\n          <App />\r\n          </BrowserRouter>\r\n        </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}